use clap::{Arg, App};

pub fn get_args() -> App<'static, 'static> {
    App::new("gDemux")
        .version("0.1")
        .author("Noam Teyssier <Noam.Teyssier@ucsf.edu>")
        .about("Parses a pair of Raw FASTQ files and calculates the number of UMIs that belong to each barcode-guide interaction")
        .arg(Arg::with_name("INPUT_R1")
            .short("i")
            .long("r1")
            .help("Sets the input R1 fastq file to use (*.fastq, *.fq, *.fastq.gz, *.fq.gz)")
            .required(true)
            .min_values(1))
        .arg(Arg::with_name("INPUT_R2")
            .short("I")
            .long("r2")
            .help("Sets the input R2 fastq file to use (*.fastq, *.fq, *.fastq.gz, *.fq.gz)")
            .required(true)
            .min_values(1))
        .arg(Arg::with_name("barcode_whitelist")
            .short("c")
            .long("barcode_whitelist")
            .help("Sets the input barcode whitelist to screen R1 against")
            .required(true)
            .min_values(1))
        .arg(Arg::with_name("guide_whitelist")
            .short("g")
            .long("guide_whitelist")
            .help("Sets the input guide whitelist to map R2 against (can be .txt, .tsv)")
            .required(true)
            .min_values(1))
        .arg(Arg::with_name("SIZE_UMI")
                .short("u")
                .long("umi_size")
                .help("Sets the size of the UMI to use (default=12)")
                .required(false)
                .takes_value(true)
                .default_value("12"))
        .arg(Arg::with_name("ADAPTER")
            .short("a")
            .long("adapter")
            .help("Sets the adapter sequence to match R2 with")
            .required(false)
            .takes_value(true)
            .default_value("AGTATCCCTTGGAGAACCACCTTG"))
}
